package TextJustification;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class MainFounction {
	public static void main(String[] args) throws IOException {

		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();                    //number of words
		int width = sc.nextInt();				 // width  as a number of characters

		String[] W = new String[n];              //an array W [0 . . . n − 1] of strings

		int lengthOfWord;                        //The length of each string
		Random random = new Random();
		for (int i = 0; i < n; i++) {
			lengthOfWord = random.nextInt(15) + 1;// Generate the random number 1-15, indicating the word's length
			W[i] = getRandomString(lengthOfWord); //Generate a string with a length of lengthOfWord
		}

		ArrayList<Integer> list = Question2.split(W, width);  //obtain the list of breakpoints L
		Question3.justify(W, width, list);					  //call the method “justify”

		//Create a file "unjust.txt"
		File file = new File("unjust.txt");					  
		if (!file.exists()) {
			file.createNewFile();
		}
		String str = "";     //storage the array W  in  "str"
		for (int i = 0; i < W.length; i++) {
			str += W[i];
			if (i != W.length - 1) {
				str += " ";
			}
		}
		//output the array W to unjust.txt in a single line
		BufferedWriter bw = new BufferedWriter(new FileWriter(file));
		bw.write(str);
		bw.close();
	}
	
	public static String getRandomString(int length) {						//generate random strings 
		
		String str = "zxcvbnmlkjhgfdsaqwertyuiopQWERTYUIOPASDFGHJKLZXCVBNM";// Define A string (a-z, A-Z),length = 52
		
		Random random = new Random();										//Random number generated by Random
		StringBuffer sb = new StringBuffer();
		
		for (int i = 0; i < length; ++i) {									// The length is the number of cycles
			int number = random.nextInt(52);								// The number is 0-51
			sb.append(str.charAt(number));      							//The resulting number is loaded into sb
		}
		
		return sb.toString();												// Converts  character to a string
	}
	
}
